// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Infrastructure;

namespace api.Migrations
{
    [DbContext(typeof(PagCertoDbContext))]
    partial class PagCertoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("api.Model.EntityModel.Anticipation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AnalysisEndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AnalysisResult")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AnalysisStartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("AnticipatedValue")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("RequestAmountOfAnticipation")
                        .HasColumnType("decimal(8,2)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UniqueIdentifier")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Anticipation");
                });

            modelBuilder.Entity("api.Model.EntityModel.Installment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("AnticipatedValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GrossValue")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("InstallmentIdentifier")
                        .HasColumnType("int");

                    b.Property<int>("InstallmentNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("NetValue")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("ReceiptDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TransactionInstallmentsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("TransferDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TransactionInstallmentsId");

                    b.ToTable("Installment");
                });

            modelBuilder.Entity("api.Model.EntityModel.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AcquirerConfirmation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Anticipated")
                        .HasColumnType("bit");

                    b.Property<Guid?>("AnticipationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CardFinal")
                        .IsRequired()
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<DateTime?>("FailureDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FlatRate")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("GrossAmount")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("Nsu")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfInstallments")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDatePerformed")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AnticipationId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("api.Model.EntityModel.Installment", b =>
                {
                    b.HasOne("api.Model.EntityModel.Transaction", "Transaction")
                        .WithMany("Installments")
                        .HasForeignKey("TransactionInstallmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("api.Model.EntityModel.Transaction", b =>
                {
                    b.HasOne("api.Model.EntityModel.Anticipation", null)
                        .WithMany("Transactions")
                        .HasForeignKey("AnticipationId");
                });
#pragma warning restore 612, 618
        }
    }
}
